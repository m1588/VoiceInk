name: macOS Build (manual)

on:
  workflow_dispatch:
    inputs:
      xcode:
        description: Xcode version
        required: true
        default: '15.4'
      scheme:
        description: Xcode scheme
        required: true
        default: 'VoiceInk'
      configuration:
        description: Build configuration
        required: true
        default: 'Release'

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ inputs.xcode }}

      # Cache the prebuilt xcframework to speed up subsequent manual runs
      - name: Cache whisper.xcframework
        id: cache-whisper
        uses: actions/cache@v4
        with:
          path: ../whisper.cpp/build-apple/whisper.xcframework
          key: whisper-xcframework-${{ inputs.xcode }}

      - name: Build whisper.cpp (xcframework)
        if: steps.cache-whisper.outputs.cache-hit != 'true'
        run: |
          set -euo pipefail
          cd ..
          git clone --depth=1 https://github.com/ggerganov/whisper.cpp.git
          cd whisper.cpp
          ./build-xcframework.sh
          test -d build-apple/whisper.xcframework

      # If your Xcode project expects the xcframework at ../whisper.cpp/build-apple,
      # ensure the relative path is correct. Otherwise adjust linkage in the project.
      - name: Resolve packages
        run: xcodebuild -resolvePackageDependencies -scheme "${{ inputs.scheme }}"

      - name: Build
        run: |
          set -euo pipefail
          xcodebuild \
            -scheme "${{ inputs.scheme }}" \
            -configuration "${{ inputs.configuration }}" \
            -destination "platform=macOS" \
            ONLY_ACTIVE_ARCH=NO ARCHS=arm64 VALID_ARCHS=arm64 \
            SWIFT_OPTIMIZATION_LEVEL=-O SWIFT_COMPILATION_MODE=wholemodule \
            OTHER_CFLAGS="-O3 -DNDEBUG" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            -quiet \
            clean build \
            BUILD_DIR=$PWD/build

      - name: Package .app
        run: |
          APP_PATH="$(/usr/bin/find build -name '*.app' -maxdepth 5 | head -n 1)"
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" "${{ inputs.scheme }}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.scheme }}-macOS
          path: ${{ inputs.scheme }}.zip
