name: macOS Build (manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '26.0'

      # Restore the prebuilt xcframework cache to speed up subsequent manual runs
      - name: Restore whisper.xcframework cache
        id: cache-whisper
        uses: actions/cache/restore@v4
        with:
          path: whisper.cpp/build-apple/whisper.xcframework
          key: whisper-xcframework-26.0

      - name: Build whisper.cpp (xcframework)
        id: build-whisper
        if: steps.cache-whisper.outputs.cache-hit != 'true'
        run: |
          set -euo pipefail
          if [ ! -d whisper.cpp ]; then
            git clone --depth=1 https://github.com/ggerganov/whisper.cpp.git
          fi
          cd whisper.cpp
          ./build-xcframework.sh
          test -d build-apple/whisper.xcframework

      - name: Expose xcframework at expected path
        run: |
          set -euo pipefail
          EXPECTED_PARENT_PATH="$GITHUB_WORKSPACE/../whisper.cpp"
          # Remove any stale file/dir and create a symlink pointing to workspace copy
          if [ -e "$EXPECTED_PARENT_PATH" ] || [ -L "$EXPECTED_PARENT_PATH" ]; then
            rm -rf "$EXPECTED_PARENT_PATH"
          fi
          ln -s "$GITHUB_WORKSPACE/whisper.cpp" "$EXPECTED_PARENT_PATH"

      # Save cache even if later steps fail, but avoid overwriting an existing key
      - name: Save whisper.xcframework cache
        if: always() && !cancelled() && steps.cache-whisper.outputs.cache-hit != 'true' && steps.build-whisper.outcome == 'success'
        uses: actions/cache/save@v4
        with:
          path: whisper.cpp/build-apple/whisper.xcframework
          key: whisper-xcframework-26.0

      # If your Xcode project expects the xcframework at ../whisper.cpp/build-apple,
      # ensure the relative path is correct. Otherwise adjust linkage in the project.
      - name: Resolve packages
        run: xcodebuild -resolvePackageDependencies -scheme "VoiceInk"

      - name: Build
        run: |
          set -euo pipefail
          xcodebuild \
            -scheme "VoiceInk" \
            -configuration "Release" \
            -destination "platform=macOS,arch=arm64" \
            ONLY_ACTIVE_ARCH=NO ARCHS=arm64 VALID_ARCHS=arm64 \
            SWIFT_OPTIMIZATION_LEVEL=-O SWIFT_COMPILATION_MODE=wholemodule \
            SWIFT_STRICT_CONCURRENCY=minimal \
            OTHER_CFLAGS="-O3 -DNDEBUG" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            -quiet \
            clean build \
            BUILD_DIR=$PWD/build

      - name: Package .app
        run: |
          APP_PATH="$(/usr/bin/find build -name '*.app' -maxdepth 5 | head -n 1)"
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" "VoiceInk.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: VoiceInk-macOS
          path: VoiceInk.zip
